// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalonFryzjerski.Data;

#nullable disable

namespace SalonFryzjerski.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("SalonFryzjerski.Models.Fryzjer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Specjalizacja")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fryzjerzy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imie = "Katarzyna",
                            Specjalizacja = "Strzyżenie damskie"
                        },
                        new
                        {
                            Id = 2,
                            Imie = "Tomasz",
                            Specjalizacja = "Strzyżenie męskie"
                        });
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Harmonogram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyDostepne")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("DzienTygodnia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("FryzjerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GodzinaRozpoczecia")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("GodzinaZakonczenia")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FryzjerId");

                    b.ToTable("Harmonogramy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CzyDostepne = true,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DzienTygodnia = "Poniedziałek",
                            FryzjerId = 1,
                            GodzinaRozpoczecia = "08:00",
                            GodzinaZakonczenia = "16:00"
                        },
                        new
                        {
                            Id = 2,
                            CzyDostepne = true,
                            Data = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DzienTygodnia = "Wtorek",
                            FryzjerId = 2,
                            GodzinaRozpoczecia = "09:00",
                            GodzinaZakonczenia = "17:00"
                        });
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Klienci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imie = "Anna",
                            Nazwisko = "Kowalska",
                            Telefon = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Imie = "Jan",
                            Nazwisko = "Nowak",
                            Telefon = "987654321"
                        });
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Rezerwacja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CzasRezerwacji")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataRezerwacji")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FryzjerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KlientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UslugaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FryzjerId");

                    b.HasIndex("KlientId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Rezerwacje");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CzasRezerwacji = "10:00:00",
                            DataRezerwacji = new DateTime(2023, 10, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FryzjerId = 1,
                            KlientId = 1,
                            UslugaId = 1
                        },
                        new
                        {
                            Id = 2,
                            CzasRezerwacji = "12:00:00",
                            DataRezerwacji = new DateTime(2023, 10, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            FryzjerId = 2,
                            KlientId = 2,
                            UslugaId = 2
                        });
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Usluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Uslugi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cena = 50m,
                            Nazwa = "Strzyżenie"
                        },
                        new
                        {
                            Id = 2,
                            Cena = 150m,
                            Nazwa = "Farbowanie"
                        },
                        new
                        {
                            Id = 3,
                            Cena = 100m,
                            Nazwa = "Stylizacja"
                        });
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Harmonogram", b =>
                {
                    b.HasOne("SalonFryzjerski.Models.Fryzjer", "Fryzjer")
                        .WithMany("Harmonogramy")
                        .HasForeignKey("FryzjerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fryzjer");
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Rezerwacja", b =>
                {
                    b.HasOne("SalonFryzjerski.Models.Fryzjer", "Fryzjer")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("FryzjerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonFryzjerski.Models.Klient", "Klient")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonFryzjerski.Models.Usluga", "Usluga")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("UslugaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fryzjer");

                    b.Navigation("Klient");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Fryzjer", b =>
                {
                    b.Navigation("Harmonogramy");

                    b.Navigation("Rezerwacje");
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Klient", b =>
                {
                    b.Navigation("Rezerwacje");
                });

            modelBuilder.Entity("SalonFryzjerski.Models.Usluga", b =>
                {
                    b.Navigation("Rezerwacje");
                });
#pragma warning restore 612, 618
        }
    }
}
