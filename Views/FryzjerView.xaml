<Window x:Class="SalonFryzjerski.Views.FryzjerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Zarządzanie Fryzjerami" 
        Height="600" Width="900"
        WindowStartupLocation="CenterScreen"
        Background="Black">

    <Window.Resources>

        <!-- Header text style -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="White" />
        </Style>

        <!-- Input text box style -->
        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Background" Value="Black" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <!-- Styl przycisku 'Dodaj' (czarny + biały tekst, hover -> zielony) -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <!-- Po najechaniu myszką przycisk robi się zielony, tekst czarny -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Styl przycisku 'Usuń' (czarny + biały tekst, hover -> czerwony) -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Red"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <!-- Po najechaniu myszką przycisk robi się czerwony, tekst czarny -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Styl dla ListView jako całości -->
        <Style x:Key="ListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Styl nagłówków kolumn (GridViewColumnHeader) -->
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!-- Styl wierszy ListViewItem (jeśli chcesz też obramować każdy wiersz) -->
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <!-- Jeśli chcesz obramowania każdego wiersza, odkomentuj poniższe:
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            -->
            <Style.Triggers>
                <!-- Przykład wyróżnienia wybranego wiersza -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="3*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Lista fryzjerów -->
        <ListView ItemsSource="{Binding Fryzjerzy}" 
                  SelectedItem="{Binding SelectedFryzjer}" 
                  Margin="10" 
                  Grid.Row="0" 
                  Style="{StaticResource ListViewStyle}">

            <ListView.View>
                <GridView>
                    <GridViewColumn Header="ID" DisplayMemberBinding="{Binding Id}" Width="50" />
                    <GridViewColumn Header="Imię" DisplayMemberBinding="{Binding Imie}" Width="200" />
                    <GridViewColumn Header="Specjalizacja" DisplayMemberBinding="{Binding Specjalizacja}" Width="400" />
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Formularz i przyciski -->
        <StackPanel Margin="10" Grid.Row="1">
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <StackPanel>
                    <TextBlock Text="Imię fryzjera" 
                               Style="{StaticResource HeaderTextStyle}" Margin="5" />
                    <TextBox Text="{Binding NewFryzjer.Imie, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource InputTextBoxStyle}" 
                             Width="200" 
                             Margin="5" />
                </StackPanel>

                <StackPanel>
                    <TextBlock Text="Specjalizacja fryzjera" 
                               Style="{StaticResource HeaderTextStyle}" Margin="5" />
                    <TextBox Text="{Binding NewFryzjer.Specjalizacja, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{StaticResource InputTextBoxStyle}"
                             Width="400" 
                             Margin="5" />
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button Content="Dodaj Fryzjera" 
                        Command="{Binding AddCommand}" 
                        Style="{StaticResource ButtonStyle}" />

                <Button Content="Usuń Fryzjera" 
                        Command="{Binding DeleteCommand}" 
                        Style="{StaticResource DeleteButtonStyle}" 
                        IsEnabled="{Binding SelectedFryzjer}" />
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
